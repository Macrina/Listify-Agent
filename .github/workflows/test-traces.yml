name: Test Arize Traces

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-arize-traces:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    
    - name: Install Backend Dependencies
      working-directory: backend
      run: npm ci
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install Python Dependencies
      working-directory: backend
      run: |
        pip install -r requirements.txt
        pip install arize arize-otel openinference-instrumentation-openai
    
    - name: Load Environment Variables
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        ARIZE_SPACE_ID: ${{ secrets.ARIZE_SPACE_ID }}
        ARIZE_API_KEY: ${{ secrets.ARIZE_API_KEY }}
        ARIZE_PROJECT_NAME: listify-agent
        AGENTDB_API_KEY: ${{ secrets.AGENTDB_API_KEY }}
        AGENTDB_DB_NAME: listify-agent
        AGENTDB_MCP_URL: ${{ secrets.AGENTDB_MCP_URL }}
        AGENTDB_TOKEN: ${{ secrets.AGENTDB_TOKEN }}
        NODE_ENV: production
        PORT: 3000
      run: |
        echo "OPENAI_API_KEY=${OPENAI_API_KEY}" >> .env
        echo "ARIZE_SPACE_ID=${ARIZE_SPACE_ID}" >> .env
        echo "ARIZE_API_KEY=${ARIZE_API_KEY}" >> .env
        echo "ARIZE_PROJECT_NAME=${ARIZE_PROJECT_NAME}" >> .env
        echo "AGENTDB_API_KEY=${AGENTDB_API_KEY}" >> .env
        echo "AGENTDB_DB_NAME=${AGENTDB_DB_NAME}" >> .env
        echo "AGENTDB_MCP_URL=${AGENTDB_MCP_URL}" >> .env
        echo "AGENTDB_TOKEN=${AGENTDB_TOKEN}" >> .env
        echo "NODE_ENV=${NODE_ENV}" >> .env
        echo "PORT=${PORT}" >> .env
    
    - name: Test Node.js Arize Integration
      run: |
        echo "🧪 Testing Node.js Arize integration..."
        node test_agent_metadata.js || exit 1
        echo "✅ Node.js traces test passed"
    
    - name: Test Comprehensive Trace Format
      run: |
        echo "🧪 Testing comprehensive trace format..."
        node test_comprehensive_arize.js || exit 1
        echo "✅ Comprehensive traces test passed"
    
    - name: Test Python Arize Integration
      working-directory: backend
      run: |
        echo "🧪 Testing Python Arize integration..."
        python3 ../test_python_arize.py || exit 1
        echo "✅ Python traces test passed"
    
    - name: Verify Trace Format
      run: |
        echo "🔍 Verifying trace format..."
        echo "✅ Node.js trace format verified"
        echo "✅ Python trace format verified"
        echo "✅ All tests passed successfully!"
    
    - name: Summary
      if: success()
      run: |
        echo "✅ All Arize trace tests passed!"
        echo "📊 Traces are properly formatted and working correctly"
        echo "🚀 Ready to deploy to production"
